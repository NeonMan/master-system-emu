/*
 ------------------------------------------
 --- Autogenerated file, do not modify! ---
 ------------------------------------------
*/
#ifndef __Z80_DATASET_RLCA
#define __Z80_DATASET_RLCA
#include <stdint.h>
static const uint16_t z80_dataset_rlca[] = {
  /* A increments downwards [0..255] */
  /* Commit ID: 10eb08bcd8b4 tip */
  /* Hex value of AF registers after performing RLCA with F = 0x00 */
  0x0000,
  0x0200,
  0x0400,
  0x0600,
  0x0808,
  0x0A08,
  0x0C08,
  0x0E08,
  0x1000,
  0x1200,
  0x1400,
  0x1600,
  0x1808,
  0x1A08,
  0x1C08,
  0x1E08,
  0x2020,
  0x2220,
  0x2420,
  0x2620,
  0x2828,
  0x2A28,
  0x2C28,
  0x2E28,
  0x3020,
  0x3220,
  0x3420,
  0x3620,
  0x3828,
  0x3A28,
  0x3C28,
  0x3E28,
  0x4000,
  0x4200,
  0x4400,
  0x4600,
  0x4808,
  0x4A08,
  0x4C08,
  0x4E08,
  0x5000,
  0x5200,
  0x5400,
  0x5600,
  0x5808,
  0x5A08,
  0x5C08,
  0x5E08,
  0x6020,
  0x6220,
  0x6420,
  0x6620,
  0x6828,
  0x6A28,
  0x6C28,
  0x6E28,
  0x7020,
  0x7220,
  0x7420,
  0x7620,
  0x7828,
  0x7A28,
  0x7C28,
  0x7E28,
  0x8000,
  0x8200,
  0x8400,
  0x8600,
  0x8808,
  0x8A08,
  0x8C08,
  0x8E08,
  0x9000,
  0x9200,
  0x9400,
  0x9600,
  0x9808,
  0x9A08,
  0x9C08,
  0x9E08,
  0xA020,
  0xA220,
  0xA420,
  0xA620,
  0xA828,
  0xAA28,
  0xAC28,
  0xAE28,
  0xB020,
  0xB220,
  0xB420,
  0xB620,
  0xB828,
  0xBA28,
  0xBC28,
  0xBE28,
  0xC000,
  0xC200,
  0xC400,
  0xC600,
  0xC808,
  0xCA08,
  0xCC08,
  0xCE08,
  0xD000,
  0xD200,
  0xD400,
  0xD600,
  0xD808,
  0xDA08,
  0xDC08,
  0xDE08,
  0xE020,
  0xE220,
  0xE420,
  0xE620,
  0xE828,
  0xEA28,
  0xEC28,
  0xEE28,
  0xF020,
  0xF220,
  0xF420,
  0xF620,
  0xF828,
  0xFA28,
  0xFC28,
  0xFE28,
  0x0101,
  0x0301,
  0x0501,
  0x0701,
  0x0909,
  0x0B09,
  0x0D09,
  0x0F09,
  0x1101,
  0x1301,
  0x1501,
  0x1701,
  0x1909,
  0x1B09,
  0x1D09,
  0x1F09,
  0x2121,
  0x2321,
  0x2521,
  0x2721,
  0x2929,
  0x2B29,
  0x2D29,
  0x2F29,
  0x3121,
  0x3321,
  0x3521,
  0x3721,
  0x3929,
  0x3B29,
  0x3D29,
  0x3F29,
  0x4101,
  0x4301,
  0x4501,
  0x4701,
  0x4909,
  0x4B09,
  0x4D09,
  0x4F09,
  0x5101,
  0x5301,
  0x5501,
  0x5701,
  0x5909,
  0x5B09,
  0x5D09,
  0x5F09,
  0x6121,
  0x6321,
  0x6521,
  0x6721,
  0x6929,
  0x6B29,
  0x6D29,
  0x6F29,
  0x7121,
  0x7321,
  0x7521,
  0x7721,
  0x7929,
  0x7B29,
  0x7D29,
  0x7F29,
  0x8101,
  0x8301,
  0x8501,
  0x8701,
  0x8909,
  0x8B09,
  0x8D09,
  0x8F09,
  0x9101,
  0x9301,
  0x9501,
  0x9701,
  0x9909,
  0x9B09,
  0x9D09,
  0x9F09,
  0xA121,
  0xA321,
  0xA521,
  0xA721,
  0xA929,
  0xAB29,
  0xAD29,
  0xAF29,
  0xB121,
  0xB321,
  0xB521,
  0xB721,
  0xB929,
  0xBB29,
  0xBD29,
  0xBF29,
  0xC101,
  0xC301,
  0xC501,
  0xC701,
  0xC909,
  0xCB09,
  0xCD09,
  0xCF09,
  0xD101,
  0xD301,
  0xD501,
  0xD701,
  0xD909,
  0xDB09,
  0xDD09,
  0xDF09,
  0xE121,
  0xE321,
  0xE521,
  0xE721,
  0xE929,
  0xEB29,
  0xED29,
  0xEF29,
  0xF121,
  0xF321,
  0xF521,
  0xF721,
  0xF929,
  0xFB29,
  0xFD29,
  0xFF29,
  /* Hex value of AF registers after performing RLCA with F = 0xFF */
  0x00C4,
  0x02C4,
  0x04C4,
  0x06C4,
  0x08CC,
  0x0ACC,
  0x0CCC,
  0x0ECC,
  0x10C4,
  0x12C4,
  0x14C4,
  0x16C4,
  0x18CC,
  0x1ACC,
  0x1CCC,
  0x1ECC,
  0x20E4,
  0x22E4,
  0x24E4,
  0x26E4,
  0x28EC,
  0x2AEC,
  0x2CEC,
  0x2EEC,
  0x30E4,
  0x32E4,
  0x34E4,
  0x36E4,
  0x38EC,
  0x3AEC,
  0x3CEC,
  0x3EEC,
  0x40C4,
  0x42C4,
  0x44C4,
  0x46C4,
  0x48CC,
  0x4ACC,
  0x4CCC,
  0x4ECC,
  0x50C4,
  0x52C4,
  0x54C4,
  0x56C4,
  0x58CC,
  0x5ACC,
  0x5CCC,
  0x5ECC,
  0x60E4,
  0x62E4,
  0x64E4,
  0x66E4,
  0x68EC,
  0x6AEC,
  0x6CEC,
  0x6EEC,
  0x70E4,
  0x72E4,
  0x74E4,
  0x76E4,
  0x78EC,
  0x7AEC,
  0x7CEC,
  0x7EEC,
  0x80C4,
  0x82C4,
  0x84C4,
  0x86C4,
  0x88CC,
  0x8ACC,
  0x8CCC,
  0x8ECC,
  0x90C4,
  0x92C4,
  0x94C4,
  0x96C4,
  0x98CC,
  0x9ACC,
  0x9CCC,
  0x9ECC,
  0xA0E4,
  0xA2E4,
  0xA4E4,
  0xA6E4,
  0xA8EC,
  0xAAEC,
  0xACEC,
  0xAEEC,
  0xB0E4,
  0xB2E4,
  0xB4E4,
  0xB6E4,
  0xB8EC,
  0xBAEC,
  0xBCEC,
  0xBEEC,
  0xC0C4,
  0xC2C4,
  0xC4C4,
  0xC6C4,
  0xC8CC,
  0xCACC,
  0xCCCC,
  0xCECC,
  0xD0C4,
  0xD2C4,
  0xD4C4,
  0xD6C4,
  0xD8CC,
  0xDACC,
  0xDCCC,
  0xDECC,
  0xE0E4,
  0xE2E4,
  0xE4E4,
  0xE6E4,
  0xE8EC,
  0xEAEC,
  0xECEC,
  0xEEEC,
  0xF0E4,
  0xF2E4,
  0xF4E4,
  0xF6E4,
  0xF8EC,
  0xFAEC,
  0xFCEC,
  0xFEEC,
  0x01C5,
  0x03C5,
  0x05C5,
  0x07C5,
  0x09CD,
  0x0BCD,
  0x0DCD,
  0x0FCD,
  0x11C5,
  0x13C5,
  0x15C5,
  0x17C5,
  0x19CD,
  0x1BCD,
  0x1DCD,
  0x1FCD,
  0x21E5,
  0x23E5,
  0x25E5,
  0x27E5,
  0x29ED,
  0x2BED,
  0x2DED,
  0x2FED,
  0x31E5,
  0x33E5,
  0x35E5,
  0x37E5,
  0x39ED,
  0x3BED,
  0x3DED,
  0x3FED,
  0x41C5,
  0x43C5,
  0x45C5,
  0x47C5,
  0x49CD,
  0x4BCD,
  0x4DCD,
  0x4FCD,
  0x51C5,
  0x53C5,
  0x55C5,
  0x57C5,
  0x59CD,
  0x5BCD,
  0x5DCD,
  0x5FCD,
  0x61E5,
  0x63E5,
  0x65E5,
  0x67E5,
  0x69ED,
  0x6BED,
  0x6DED,
  0x6FED,
  0x71E5,
  0x73E5,
  0x75E5,
  0x77E5,
  0x79ED,
  0x7BED,
  0x7DED,
  0x7FED,
  0x81C5,
  0x83C5,
  0x85C5,
  0x87C5,
  0x89CD,
  0x8BCD,
  0x8DCD,
  0x8FCD,
  0x91C5,
  0x93C5,
  0x95C5,
  0x97C5,
  0x99CD,
  0x9BCD,
  0x9DCD,
  0x9FCD,
  0xA1E5,
  0xA3E5,
  0xA5E5,
  0xA7E5,
  0xA9ED,
  0xABED,
  0xADED,
  0xAFED,
  0xB1E5,
  0xB3E5,
  0xB5E5,
  0xB7E5,
  0xB9ED,
  0xBBED,
  0xBDED,
  0xBFED,
  0xC1C5,
  0xC3C5,
  0xC5C5,
  0xC7C5,
  0xC9CD,
  0xCBCD,
  0xCDCD,
  0xCFCD,
  0xD1C5,
  0xD3C5,
  0xD5C5,
  0xD7C5,
  0xD9CD,
  0xDBCD,
  0xDDCD,
  0xDFCD,
  0xE1E5,
  0xE3E5,
  0xE5E5,
  0xE7E5,
  0xE9ED,
  0xEBED,
  0xEDED,
  0xEFED,
  0xF1E5,
  0xF3E5,
  0xF5E5,
  0xF7E5,
  0xF9ED,
  0xFBED,
  0xFDED,
  0xFFED,
  /* EOF */
};
#endif

/*
 ------------------------------------------
 --- Autogenerated file, do not modify! ---
 ------------------------------------------
*/
#ifndef __Z80_DATASET_RRCA
#define __Z80_DATASET_RRCA
#include <stdint.h>
static const uint16_t z80_dataset_rrca[] = {
  /* A increments downwards [0..255] */
  /* Commit ID: 10eb08bcd8b4 tip */
  /* Hex value of AF registers after performing RRCA with F = 0x00 */
  0x0000,
  0x8001,
  0x0100,
  0x8101,
  0x0200,
  0x8201,
  0x0300,
  0x8301,
  0x0400,
  0x8401,
  0x0500,
  0x8501,
  0x0600,
  0x8601,
  0x0700,
  0x8701,
  0x0808,
  0x8809,
  0x0908,
  0x8909,
  0x0A08,
  0x8A09,
  0x0B08,
  0x8B09,
  0x0C08,
  0x8C09,
  0x0D08,
  0x8D09,
  0x0E08,
  0x8E09,
  0x0F08,
  0x8F09,
  0x1000,
  0x9001,
  0x1100,
  0x9101,
  0x1200,
  0x9201,
  0x1300,
  0x9301,
  0x1400,
  0x9401,
  0x1500,
  0x9501,
  0x1600,
  0x9601,
  0x1700,
  0x9701,
  0x1808,
  0x9809,
  0x1908,
  0x9909,
  0x1A08,
  0x9A09,
  0x1B08,
  0x9B09,
  0x1C08,
  0x9C09,
  0x1D08,
  0x9D09,
  0x1E08,
  0x9E09,
  0x1F08,
  0x9F09,
  0x2020,
  0xA021,
  0x2120,
  0xA121,
  0x2220,
  0xA221,
  0x2320,
  0xA321,
  0x2420,
  0xA421,
  0x2520,
  0xA521,
  0x2620,
  0xA621,
  0x2720,
  0xA721,
  0x2828,
  0xA829,
  0x2928,
  0xA929,
  0x2A28,
  0xAA29,
  0x2B28,
  0xAB29,
  0x2C28,
  0xAC29,
  0x2D28,
  0xAD29,
  0x2E28,
  0xAE29,
  0x2F28,
  0xAF29,
  0x3020,
  0xB021,
  0x3120,
  0xB121,
  0x3220,
  0xB221,
  0x3320,
  0xB321,
  0x3420,
  0xB421,
  0x3520,
  0xB521,
  0x3620,
  0xB621,
  0x3720,
  0xB721,
  0x3828,
  0xB829,
  0x3928,
  0xB929,
  0x3A28,
  0xBA29,
  0x3B28,
  0xBB29,
  0x3C28,
  0xBC29,
  0x3D28,
  0xBD29,
  0x3E28,
  0xBE29,
  0x3F28,
  0xBF29,
  0x4000,
  0xC001,
  0x4100,
  0xC101,
  0x4200,
  0xC201,
  0x4300,
  0xC301,
  0x4400,
  0xC401,
  0x4500,
  0xC501,
  0x4600,
  0xC601,
  0x4700,
  0xC701,
  0x4808,
  0xC809,
  0x4908,
  0xC909,
  0x4A08,
  0xCA09,
  0x4B08,
  0xCB09,
  0x4C08,
  0xCC09,
  0x4D08,
  0xCD09,
  0x4E08,
  0xCE09,
  0x4F08,
  0xCF09,
  0x5000,
  0xD001,
  0x5100,
  0xD101,
  0x5200,
  0xD201,
  0x5300,
  0xD301,
  0x5400,
  0xD401,
  0x5500,
  0xD501,
  0x5600,
  0xD601,
  0x5700,
  0xD701,
  0x5808,
  0xD809,
  0x5908,
  0xD909,
  0x5A08,
  0xDA09,
  0x5B08,
  0xDB09,
  0x5C08,
  0xDC09,
  0x5D08,
  0xDD09,
  0x5E08,
  0xDE09,
  0x5F08,
  0xDF09,
  0x6020,
  0xE021,
  0x6120,
  0xE121,
  0x6220,
  0xE221,
  0x6320,
  0xE321,
  0x6420,
  0xE421,
  0x6520,
  0xE521,
  0x6620,
  0xE621,
  0x6720,
  0xE721,
  0x6828,
  0xE829,
  0x6928,
  0xE929,
  0x6A28,
  0xEA29,
  0x6B28,
  0xEB29,
  0x6C28,
  0xEC29,
  0x6D28,
  0xED29,
  0x6E28,
  0xEE29,
  0x6F28,
  0xEF29,
  0x7020,
  0xF021,
  0x7120,
  0xF121,
  0x7220,
  0xF221,
  0x7320,
  0xF321,
  0x7420,
  0xF421,
  0x7520,
  0xF521,
  0x7620,
  0xF621,
  0x7720,
  0xF721,
  0x7828,
  0xF829,
  0x7928,
  0xF929,
  0x7A28,
  0xFA29,
  0x7B28,
  0xFB29,
  0x7C28,
  0xFC29,
  0x7D28,
  0xFD29,
  0x7E28,
  0xFE29,
  0x7F28,
  0xFF29,
  /* Hex value of AF registers after performing RRCA with F = 0xFF */
  0x00C4,
  0x80C5,
  0x01C4,
  0x81C5,
  0x02C4,
  0x82C5,
  0x03C4,
  0x83C5,
  0x04C4,
  0x84C5,
  0x05C4,
  0x85C5,
  0x06C4,
  0x86C5,
  0x07C4,
  0x87C5,
  0x08CC,
  0x88CD,
  0x09CC,
  0x89CD,
  0x0ACC,
  0x8ACD,
  0x0BCC,
  0x8BCD,
  0x0CCC,
  0x8CCD,
  0x0DCC,
  0x8DCD,
  0x0ECC,
  0x8ECD,
  0x0FCC,
  0x8FCD,
  0x10C4,
  0x90C5,
  0x11C4,
  0x91C5,
  0x12C4,
  0x92C5,
  0x13C4,
  0x93C5,
  0x14C4,
  0x94C5,
  0x15C4,
  0x95C5,
  0x16C4,
  0x96C5,
  0x17C4,
  0x97C5,
  0x18CC,
  0x98CD,
  0x19CC,
  0x99CD,
  0x1ACC,
  0x9ACD,
  0x1BCC,
  0x9BCD,
  0x1CCC,
  0x9CCD,
  0x1DCC,
  0x9DCD,
  0x1ECC,
  0x9ECD,
  0x1FCC,
  0x9FCD,
  0x20E4,
  0xA0E5,
  0x21E4,
  0xA1E5,
  0x22E4,
  0xA2E5,
  0x23E4,
  0xA3E5,
  0x24E4,
  0xA4E5,
  0x25E4,
  0xA5E5,
  0x26E4,
  0xA6E5,
  0x27E4,
  0xA7E5,
  0x28EC,
  0xA8ED,
  0x29EC,
  0xA9ED,
  0x2AEC,
  0xAAED,
  0x2BEC,
  0xABED,
  0x2CEC,
  0xACED,
  0x2DEC,
  0xADED,
  0x2EEC,
  0xAEED,
  0x2FEC,
  0xAFED,
  0x30E4,
  0xB0E5,
  0x31E4,
  0xB1E5,
  0x32E4,
  0xB2E5,
  0x33E4,
  0xB3E5,
  0x34E4,
  0xB4E5,
  0x35E4,
  0xB5E5,
  0x36E4,
  0xB6E5,
  0x37E4,
  0xB7E5,
  0x38EC,
  0xB8ED,
  0x39EC,
  0xB9ED,
  0x3AEC,
  0xBAED,
  0x3BEC,
  0xBBED,
  0x3CEC,
  0xBCED,
  0x3DEC,
  0xBDED,
  0x3EEC,
  0xBEED,
  0x3FEC,
  0xBFED,
  0x40C4,
  0xC0C5,
  0x41C4,
  0xC1C5,
  0x42C4,
  0xC2C5,
  0x43C4,
  0xC3C5,
  0x44C4,
  0xC4C5,
  0x45C4,
  0xC5C5,
  0x46C4,
  0xC6C5,
  0x47C4,
  0xC7C5,
  0x48CC,
  0xC8CD,
  0x49CC,
  0xC9CD,
  0x4ACC,
  0xCACD,
  0x4BCC,
  0xCBCD,
  0x4CCC,
  0xCCCD,
  0x4DCC,
  0xCDCD,
  0x4ECC,
  0xCECD,
  0x4FCC,
  0xCFCD,
  0x50C4,
  0xD0C5,
  0x51C4,
  0xD1C5,
  0x52C4,
  0xD2C5,
  0x53C4,
  0xD3C5,
  0x54C4,
  0xD4C5,
  0x55C4,
  0xD5C5,
  0x56C4,
  0xD6C5,
  0x57C4,
  0xD7C5,
  0x58CC,
  0xD8CD,
  0x59CC,
  0xD9CD,
  0x5ACC,
  0xDACD,
  0x5BCC,
  0xDBCD,
  0x5CCC,
  0xDCCD,
  0x5DCC,
  0xDDCD,
  0x5ECC,
  0xDECD,
  0x5FCC,
  0xDFCD,
  0x60E4,
  0xE0E5,
  0x61E4,
  0xE1E5,
  0x62E4,
  0xE2E5,
  0x63E4,
  0xE3E5,
  0x64E4,
  0xE4E5,
  0x65E4,
  0xE5E5,
  0x66E4,
  0xE6E5,
  0x67E4,
  0xE7E5,
  0x68EC,
  0xE8ED,
  0x69EC,
  0xE9ED,
  0x6AEC,
  0xEAED,
  0x6BEC,
  0xEBED,
  0x6CEC,
  0xECED,
  0x6DEC,
  0xEDED,
  0x6EEC,
  0xEEED,
  0x6FEC,
  0xEFED,
  0x70E4,
  0xF0E5,
  0x71E4,
  0xF1E5,
  0x72E4,
  0xF2E5,
  0x73E4,
  0xF3E5,
  0x74E4,
  0xF4E5,
  0x75E4,
  0xF5E5,
  0x76E4,
  0xF6E5,
  0x77E4,
  0xF7E5,
  0x78EC,
  0xF8ED,
  0x79EC,
  0xF9ED,
  0x7AEC,
  0xFAED,
  0x7BEC,
  0xFBED,
  0x7CEC,
  0xFCED,
  0x7DEC,
  0xFDED,
  0x7EEC,
  0xFEED,
  0x7FEC,
  0xFFED,
  /* EOF */
};
#endif

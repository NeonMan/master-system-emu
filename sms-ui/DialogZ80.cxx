// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "DialogZ80.h"

DialogZ80::DialogZ80() {
  { windowDialog = new Fl_Double_Window(570, 286, "z80");
    windowDialog->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(0, 20, 165, 265, "Registers");
      { textAF = new Fl_Output(25, 30, 50, 30, "AF");
        textAF->textfont(13);
      } // Fl_Output* textAF
      { textBC = new Fl_Output(25, 60, 50, 30, "BC");
        textBC->textfont(13);
      } // Fl_Output* textBC
      { textDE = new Fl_Output(25, 90, 50, 30, "DE");
        textDE->textfont(13);
      } // Fl_Output* textDE
      { textHL = new Fl_Output(25, 120, 50, 30, "HL");
        textHL->textfont(13);
      } // Fl_Output* textHL
      { textIX = new Fl_Output(25, 150, 50, 30, "IX");
        textIX->textfont(13);
      } // Fl_Output* textIX
      { textIY = new Fl_Output(25, 180, 50, 30, "IY");
        textIY->textfont(13);
      } // Fl_Output* textIY
      { textSP = new Fl_Output(25, 215, 50, 30, "SP");
        textSP->textfont(13);
      } // Fl_Output* textSP
      { textPC = new Fl_Output(25, 245, 50, 30, "PC");
        textPC->textfont(13);
      } // Fl_Output* textPC
      { textAFp = new Fl_Output(110, 30, 50, 30, "AF\'");
        textAFp->textfont(13);
      } // Fl_Output* textAFp
      { textBCp = new Fl_Output(110, 60, 50, 30, "BC\'");
        textBCp->textfont(13);
      } // Fl_Output* textBCp
      { textDEp = new Fl_Output(110, 90, 50, 30, "DE\'");
        textDEp->textfont(13);
      } // Fl_Output* textDEp
      { textHLp = new Fl_Output(110, 120, 50, 30, "HL\'");
        textHLp->textfont(13);
      } // Fl_Output* textHLp
      { textIR = new Fl_Output(110, 150, 50, 30, "IR");
        textIR->textfont(13);
      } // Fl_Output* textIR
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(190, 20, 235, 165, "Signals");
      { checkM1 = new Fl_Check_Button(245, 25, 25, 25, "!M1");
        checkM1->down_box(FL_DOWN_BOX);
        checkM1->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkM1
      { checkMreq = new Fl_Check_Button(245, 45, 25, 25, "!MREQ");
        checkMreq->down_box(FL_DOWN_BOX);
        checkMreq->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkMreq
      { checkIoreq = new Fl_Check_Button(245, 65, 25, 25, "!IOREQ");
        checkIoreq->down_box(FL_DOWN_BOX);
        checkIoreq->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkIoreq
      { checkRd = new Fl_Check_Button(245, 85, 25, 25, "!RD");
        checkRd->down_box(FL_DOWN_BOX);
        checkRd->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkRd
      { checkWr = new Fl_Check_Button(245, 105, 25, 25, "!WR");
        checkWr->down_box(FL_DOWN_BOX);
        checkWr->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkWr
      { checkRfsh = new Fl_Check_Button(245, 125, 25, 25, "!RFSH");
        checkRfsh->down_box(FL_DOWN_BOX);
        checkRfsh->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkRfsh
      { checkHalt = new Fl_Check_Button(245, 145, 25, 25, "!HALT");
        checkHalt->down_box(FL_DOWN_BOX);
        checkHalt->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkHalt
      { checkWait = new Fl_Check_Button(330, 25, 25, 25, "!WAIT");
        checkWait->down_box(FL_DOWN_BOX);
        checkWait->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkWait
      { checkInt = new Fl_Check_Button(330, 45, 25, 25, "!INT");
        checkInt->down_box(FL_DOWN_BOX);
        checkInt->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkInt
      { checkNmi = new Fl_Check_Button(330, 65, 25, 25, "!NMI");
        checkNmi->down_box(FL_DOWN_BOX);
        checkNmi->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkNmi
      { checkReset = new Fl_Check_Button(330, 85, 25, 25, "!RESET");
        checkReset->down_box(FL_DOWN_BOX);
        checkReset->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkReset
      { checkClk = new Fl_Check_Button(330, 105, 25, 25, "!CLK");
        checkClk->down_box(FL_DOWN_BOX);
        checkClk->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkClk
      { checkBusreq = new Fl_Check_Button(330, 125, 25, 25, "!BUSRQ");
        checkBusreq->down_box(FL_DOWN_BOX);
        checkBusreq->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkBusreq
      { checkBusack = new Fl_Check_Button(330, 145, 25, 25, "!BUSACK");
        checkBusack->down_box(FL_DOWN_BOX);
        checkBusack->align(Fl_Align(FL_ALIGN_LEFT));
      } // Fl_Check_Button* checkBusack
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(190, 195, 170, 90, "Buses");
      { textAddress = new Fl_Output(245, 205, 105, 25, "Address");
        textAddress->textfont(13);
      } // Fl_Output* textAddress
      { textData = new Fl_Output(245, 230, 105, 25, "Data");
        textData->textfont(13);
      } // Fl_Output* textData
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(355, 20, 225, 140, "Internal state");
      { textOpcode = new Fl_Output(420, 30, 140, 25, "Opcode");
        textOpcode->textfont(13);
      } // Fl_Output* textOpcode
      { textStage = new Fl_Output(420, 80, 45, 25, "Stage");
        textStage->textfont(13);
      } // Fl_Output* textStage
      { textDasm = new Fl_Output(420, 55, 140, 25, "Disasm");
        textDasm->textfont(13);
      } // Fl_Output* textDasm
      { textRbuffer = new Fl_Output(420, 105, 140, 25, "R Buffer");
        textRbuffer->textfont(13);
      } // Fl_Output* textRbuffer
      { textWbuffer = new Fl_Output(420, 130, 140, 25, "W Buffer");
        textWbuffer->textfont(13);
      } // Fl_Output* textWbuffer
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(365, 175, 210, 100, "Buttons");
      o->labeltype(FL_NO_LABEL);
      { buttonRunning = new Fl_Light_Button(480, 185, 75, 25, "Running");
      } // Fl_Light_Button* buttonRunning
      { buttonStep = new Fl_Button(480, 215, 75, 25, "Step");
      } // Fl_Button* buttonStep
      { buttonEdge = new Fl_Button(480, 245, 75, 25, "Edge");
      } // Fl_Button* buttonEdge
      o->end();
    } // Fl_Group* o
    windowDialog->end();
  } // Fl_Double_Window* windowDialog
  // --- BEGIN Initial vaules ---
  //Main registers
  this->textAF->value("0x0000 ?");
  this->textBC->value("0x0000 ?");
  this->textDE->value("0x0000 ?");
  this->textHL->value("0x0000 ?");
  this->textIX->value("0x0000 ?");
  this->textIY->value("0x0000 ?");
  this->textSP->value("0x0000 ?");
  this->textPC->value("0x0000 ?");
  this->textIR->value("0x0000 ?");
  //'prime' registers
  this->textAFp->value("0x0000 ?");
  this->textBCp->value("0x0000 ?");
  this->textDEp->value("0x0000 ?");
  this->textHLp->value("0x0000 ?");
  //Buses
  this->textAddress->value("0x0000 ?");
  this->textData->value("0x0000 ?");
  //Internals
  this->textOpcode->value("NOP ?");
  this->textStage->value("M1 ?");
  //Buttons
  this->buttonRunning->value(1);
  // --- END Initial values ---
}

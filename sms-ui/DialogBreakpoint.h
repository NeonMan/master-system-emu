// Copyright 2015 Juan Luis Álvarez Martínez

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef DialogBreakpoint_h
#define DialogBreakpoint_h
#include <FL/Fl.H>
#if 1
#include <stdint.h>
#include <z80/z80_macros.h>
#include <string>
#endif
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Button.H>

class DialogBreakpoints {
  uint8_t* bp_table = 0; 
public:
  DialogBreakpoints();
  Fl_Double_Window *windowDialog;
private:
  Fl_Input *textAddress;
  Fl_Check_Button *checkIo;
  Fl_Check_Button *checkPc;
  Fl_Check_Button *checkRead;
  Fl_Check_Button *checkWrite;
  Fl_Input *textNote;
  Fl_Button *buttonCreate;
  inline void cb_buttonCreate_i(Fl_Button*, void*);
  static void cb_buttonCreate(Fl_Button*, void*);
  Fl_Button *buttonRemove;
  inline void cb_buttonRemove_i(Fl_Button*, void*);
  static void cb_buttonRemove(Fl_Button*, void*);
  Fl_Check_Button *checkVdpcontrol;
  inline void cb_checkVdpcontrol_i(Fl_Check_Button*, void*);
  static void cb_checkVdpcontrol(Fl_Check_Button*, void*);
  Fl_Check_Button *checkPsgwrite;
  Fl_Check_Button *checkVdpread;
  inline void cb_checkVdpread_i(Fl_Check_Button*, void*);
  static void cb_checkVdpread(Fl_Check_Button*, void*);
  Fl_Check_Button *checkVdpwrite;
  inline void cb_checkVdpwrite_i(Fl_Check_Button*, void*);
  static void cb_checkVdpwrite(Fl_Check_Button*, void*);
  Fl_Check_Button *checkVcounter;
  inline void cb_checkVcounter_i(Fl_Check_Button*, void*);
  static void cb_checkVcounter(Fl_Check_Button*, void*);
  Fl_Check_Button *checkHcounter;
public:
  void set_breakpoint_table(uint8_t* p);
private:
  void vdp_data(uint8_t enable, uint8_t read);
  void vdp_control(uint8_t enable);
  void vdp_vcounter(uint8_t enable);
};
#endif
